// <auto-generated />
using System;
using DCCR_SERVER.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DCCR_SERVER.Migrations
{
    [DbContext(typeof(BddContext))]
    partial class BddContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveCrédit", b =>
                {
                    b.Property<string>("numero_contrat_credit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateOnly>("date_declaration")
                        .HasColumnType("date");

                    b.Property<int>("id_excel")
                        .HasColumnType("int");

                    b.Property<string>("activite_credit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("classe_retard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("cout_total_credit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("credit_accorde")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateOnly?>("date_constatation")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("date_execution")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("date_expiration")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("date_octroi")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("date_rejet")
                        .HasColumnType("date");

                    b.Property<string>("duree_initiale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duree_restante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("est_plafond_accorde")
                        .HasColumnType("bit");

                    b.Property<int>("id_lieu")
                        .HasColumnType("int");

                    b.Property<string>("id_plafond")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal?>("mensualite")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("monnaie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("montant_capital_retard")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("montant_interets_courus")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("montant_interets_retard")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("motif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nombre_echeances_impayes")
                        .HasColumnType("int");

                    b.Property<string>("situation_credit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("solde_restant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("taux")
                        .HasColumnType("decimal(8,5)");

                    b.Property<string>("type_credit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("numero_contrat_credit", "date_declaration", "id_excel");

                    b.HasIndex("date_declaration");

                    b.HasIndex("id_excel");

                    b.HasIndex("id_lieu");

                    b.HasIndex("numero_contrat_credit");

                    b.ToTable("archives_credits");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveFichierExcel", b =>
                {
                    b.Property<int>("id_fichier_excel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_fichier_excel"));

                    b.Property<string>("chemin_fichier_excel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_heure_integration_excel")
                        .HasColumnType("datetime2");

                    b.Property<string>("id_integrateur_excel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_fichier_excel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_fichier_excel");

                    b.HasIndex("id_fichier_excel");

                    b.ToTable("archives_fichiers_excel");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveFichierXml", b =>
                {
                    b.Property<int>("id_fichier_xml")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_fichier_xml"));

                    b.Property<string>("contenu_correction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contenu_suppression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_heure_generation_xml")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_fichier_excel")
                        .HasColumnType("int");

                    b.Property<string>("id_utilisateur_generateur_xml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_fichier_correction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_fichier_suppression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_fichier_xml");

                    b.HasIndex("id_fichier_excel");

                    b.HasIndex("id_fichier_xml");

                    b.ToTable("archives_fichiers_xml");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveGarantie", b =>
                {
                    b.Property<int>("id_garantie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_garantie"));

                    b.Property<string>("cle_interventant")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("date_declaration")
                        .HasColumnType("date");

                    b.Property<string>("guarantcle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("id_excel")
                        .HasColumnType("int");

                    b.Property<decimal>("montant_garantie")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("numero_contrat_credit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("type_garantie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_garantie");

                    b.HasIndex("cle_interventant");

                    b.HasIndex("date_declaration");

                    b.HasIndex("guarantcle");

                    b.HasIndex("id_excel");

                    b.HasIndex("id_garantie");

                    b.HasIndex("numero_contrat_credit");

                    b.HasIndex("numero_contrat_credit", "date_declaration", "id_excel");

                    b.ToTable("archives_garanties");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveIntervenantCrédit", b =>
                {
                    b.Property<int>("id_intervenantcredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_intervenantcredit"));

                    b.Property<string>("cle_intervenant")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("date_declaration")
                        .HasColumnType("date");

                    b.Property<int>("id_excel")
                        .HasColumnType("int");

                    b.Property<string>("niveau_responsabilite")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numero_contrat_credit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id_intervenantcredit");

                    b.HasIndex("cle_intervenant");

                    b.HasIndex("date_declaration");

                    b.HasIndex("id_excel");

                    b.HasIndex("id_intervenantcredit");

                    b.HasIndex("niveau_responsabilite");

                    b.HasIndex("numero_contrat_credit");

                    b.HasIndex("numero_contrat_credit", "date_declaration", "id_excel");

                    b.ToTable("archives_intervenants_credits");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Crédit", b =>
                {
                    b.Property<string>("numero_contrat_credit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateOnly>("date_declaration")
                        .HasColumnType("date");

                    b.Property<int>("id_excel")
                        .HasColumnType("int");

                    b.Property<string>("activite_credit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("classe_retard")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("cout_total_credit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("credit_accorde")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateOnly?>("date_constatation")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("date_execution")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("date_expiration")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("date_octroi")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("date_rejet")
                        .HasColumnType("date");

                    b.Property<string>("duree_initiale")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("duree_restante")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("est_plafond_accorde")
                        .HasColumnType("bit");

                    b.Property<int>("id_lieu")
                        .HasColumnType("int");

                    b.Property<string>("id_plafond")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal?>("mensualite")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("monnaie")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("montant_capital_retard")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("montant_interets_courus")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("montant_interets_retard")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("motif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nombre_echeances_impayes")
                        .HasColumnType("int");

                    b.Property<string>("situation_credit")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("solde_restant")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("taux")
                        .HasColumnType("decimal(8,5)");

                    b.Property<string>("type_credit")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("numero_contrat_credit", "date_declaration", "id_excel");

                    b.HasIndex("activite_credit");

                    b.HasIndex("classe_retard");

                    b.HasIndex("date_declaration");

                    b.HasIndex("duree_initiale");

                    b.HasIndex("duree_restante");

                    b.HasIndex("id_excel");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("id_excel"), new[] { "numero_contrat_credit", "date_declaration", "type_credit", "activite_credit", "situation_credit" });

                    b.HasIndex("id_lieu");

                    b.HasIndex("monnaie");

                    b.HasIndex("numero_contrat_credit");

                    b.HasIndex("situation_credit");

                    b.HasIndex("type_credit");

                    b.ToTable("credits");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.FichierExcel", b =>
                {
                    b.Property<int>("id_fichier_excel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_fichier_excel"));

                    b.Property<string>("chemin_fichier_excel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_heure_integration_excel")
                        .HasColumnType("datetime2");

                    b.Property<string>("id_integrateur_excel")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("id_session_import")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("message_statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_fichier_excel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resume_validation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("statut_import")
                        .HasColumnType("int");

                    b.HasKey("id_fichier_excel");

                    b.HasIndex("id_fichier_excel");

                    b.HasIndex("id_integrateur_excel");

                    b.ToTable("fichiers_excel");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.FichierXml", b =>
                {
                    b.Property<int>("id_fichier_xml")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_fichier_xml"));

                    b.Property<string>("contenu_correction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contenu_suppression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_heure_generation_xml")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_fichier_excel")
                        .HasColumnType("int");

                    b.Property<string>("id_utilisateur_generateur_xml")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nom_fichier_correction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_fichier_suppression")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_fichier_xml");

                    b.HasIndex("id_fichier_excel");

                    b.HasIndex("id_fichier_xml");

                    b.HasIndex("id_utilisateur_generateur_xml");

                    b.ToTable("fichiers_xml");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Garantie", b =>
                {
                    b.Property<int>("id_garantie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_garantie"));

                    b.Property<string>("cle_interventant")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("date_declaration")
                        .HasColumnType("date");

                    b.Property<int>("id_excel")
                        .HasColumnType("int");

                    b.Property<decimal>("montant_garantie")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("numero_contrat_credit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("type_garantie")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id_garantie");

                    b.HasIndex("cle_interventant");

                    b.HasIndex("date_declaration");

                    b.HasIndex("id_excel");

                    b.HasIndex("id_garantie");

                    b.HasIndex("numero_contrat_credit");

                    b.HasIndex("type_garantie");

                    b.HasIndex("numero_contrat_credit", "date_declaration", "id_excel");

                    b.ToTable("garanties");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Intervenant", b =>
                {
                    b.Property<string>("cle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_cle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cle");

                    b.HasIndex("cle")
                        .IsUnique();

                    b.ToTable("intervenants");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.IntervenantCrédit", b =>
                {
                    b.Property<int>("id_intervenantcredit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_intervenantcredit"));

                    b.Property<string>("cle_intervenant")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("date_declaration")
                        .HasColumnType("date");

                    b.Property<int>("id_excel")
                        .HasColumnType("int");

                    b.Property<string>("niveau_responsabilite")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numero_contrat_credit")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id_intervenantcredit");

                    b.HasIndex("cle_intervenant");

                    b.HasIndex("date_declaration");

                    b.HasIndex("id_excel");

                    b.HasIndex("niveau_responsabilite");

                    b.HasIndex("numero_contrat_credit");

                    b.HasIndex("numero_contrat_credit", "date_declaration", "id_excel");

                    b.ToTable("intervenants_credits");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Lieu", b =>
                {
                    b.Property<int>("id_lieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_lieu"));

                    b.Property<string>("code_agence")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("code_pays")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("code_wilaya")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id_lieu");

                    b.HasIndex("code_agence");

                    b.HasIndex("code_pays");

                    b.HasIndex("code_wilaya");

                    b.HasIndex("id_lieu");

                    b.ToTable("lieux");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.TableauDeBord", b =>
                {
                    b.Property<int>("id_kpi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_kpi"));

                    b.Property<string>("description_kpi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("requete_sql")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_kpi");

                    b.ToTable("tableau_de_bord");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.donnees_brutes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("activite_credit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("classe_retard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_agence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_pays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_wilaya")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cout_total_credit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("credit_accorde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_constatation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_declaration")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("date_execution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_expiration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_octroi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date_rejet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duree_initiale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duree_restante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("est_valide")
                        .HasColumnType("bit");

                    b.Property<int>("id_import_excel")
                        .HasColumnType("int");

                    b.Property<string>("id_plafond")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("id_session_import")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ligne_original")
                        .HasColumnType("int");

                    b.Property<string>("mensualite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("montant_capital_retard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("montant_garantie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("montant_interets_courus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("montant_interets_retard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_echeances_impayes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero_contrat")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("participant_cle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("participant_cli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("participant_nif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("participant_rib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("participant_type_cle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("role_niveau_responsabilite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("situation_credit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("solde_restant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("taux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_credit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_garantie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("numero_contrat", "date_declaration");

                    b.HasIndex("participant_cle", "participant_type_cle");

                    b.HasIndex("id_import_excel", "est_valide", "ligne_original");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("id_import_excel", "est_valide", "ligne_original"), false);

                    b.ToTable("table_intermediaire_traitement");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.MappingColonnes", b =>
                {
                    b.Property<int>("id_mapping")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_mapping"));

                    b.Property<string>("colonne_bdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colonne_excel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colonne_prod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("table_prod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_donnee_prod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_mapping");

                    b.ToTable("mapping_colonnes");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.Parametrage", b =>
                {
                    b.Property<string>("parametre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("valeur")
                        .HasColumnType("int");

                    b.HasKey("parametre");

                    b.ToTable("parametrage");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.ActivitéCrédit", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("activites_credit");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.Agence", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wilaya_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.HasIndex("wilaya_code");

                    b.ToTable("agences");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.ClasseRetard", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("classes_retard");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.DuréeCrédit", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("durees_credit");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.Monnaie", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("monnaies");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.NiveauResponsabilité", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("niveaux_responsabilite");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.Pays", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("pays");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.SituationCrédit", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("situations_credit");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.TypeCrédit", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("types_credit");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.TypeGarantie", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("types_garantie");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.Wilaya", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("code");

                    b.ToTable("wilayas");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Utilisateurs_audit.Audit", b =>
                {
                    b.Property<int>("id_action")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_action"));

                    b.Property<DateTime>("date_action")
                        .HasColumnType("datetime2");

                    b.Property<string>("id_entité")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matricule_utilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("table_ciblée")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type_action")
                        .HasColumnType("int");

                    b.HasKey("id_action");

                    b.HasIndex("matricule_utilisateur");

                    b.ToTable("pistes_audit");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Utilisateurs_audit.Utilisateur", b =>
                {
                    b.Property<string>("matricule")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mot_de_passe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_complet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("matricule");

                    b.HasIndex("matricule")
                        .IsUnique();

                    b.ToTable("utilisateurs");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.ValidationFichiers.ErreurExcel", b =>
                {
                    b.Property<int>("id_erreur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_erreur"));

                    b.Property<int>("id_excel")
                        .HasColumnType("int");

                    b.Property<int?>("id_regle")
                        .HasColumnType("int");

                    b.Property<int>("ligne_excel")
                        .HasColumnType("int");

                    b.Property<string>("message_erreur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_erreur");

                    b.HasIndex("id_regle");

                    b.HasIndex("id_excel", "ligne_excel");

                    b.ToTable("erreurs_fichiers_excel");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.ValidationFichiers.RegleValidation", b =>
                {
                    b.Property<int>("id_regle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_regle"));

                    b.Property<string>("colonne_cible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colonne_dependante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message_erreur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom_colonne")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("type_regle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valeur_cible_attendue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valeur_dependante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valeur_regle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_regle");

                    b.HasIndex("nom_colonne");

                    b.ToTable("regles_validation");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveCrédit", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Principaux.Archives.ArchiveFichierExcel", "excel")
                        .WithMany("credits")
                        .HasForeignKey("id_excel")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("excel");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveFichierXml", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Principaux.Archives.ArchiveFichierExcel", "fichier_excel")
                        .WithMany("fichiers_xml")
                        .HasForeignKey("id_fichier_excel")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("fichier_excel");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveGarantie", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Principaux.Intervenant", "guarant")
                        .WithMany()
                        .HasForeignKey("guarantcle");

                    b.HasOne("DCCR_SERVER.Models.Principaux.Archives.ArchiveCrédit", "credit")
                        .WithMany("garanties")
                        .HasForeignKey("numero_contrat_credit", "date_declaration", "id_excel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("credit");

                    b.Navigation("guarant");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveIntervenantCrédit", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Principaux.Intervenant", "intervenant")
                        .WithMany("intervenant_credits_archives")
                        .HasForeignKey("cle_intervenant")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.Principaux.Archives.ArchiveCrédit", "credit")
                        .WithMany("intervenantsCredit")
                        .HasForeignKey("numero_contrat_credit", "date_declaration", "id_excel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("credit");

                    b.Navigation("intervenant");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Crédit", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.ActivitéCrédit", "activitecredit")
                        .WithMany("credits_type_activite")
                        .HasForeignKey("activite_credit")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.ClasseRetard", "classeretard")
                        .WithMany("credits_classe_retard")
                        .HasForeignKey("classe_retard")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.DuréeCrédit", "dureeinitiale")
                        .WithMany("credits_duree_initiale")
                        .HasForeignKey("duree_initiale")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.DuréeCrédit", "dureerestante")
                        .WithMany("credits_duree_restante")
                        .HasForeignKey("duree_restante")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DCCR_SERVER.Models.Principaux.FichierExcel", "excel")
                        .WithMany("credits")
                        .HasForeignKey("id_excel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.Principaux.Lieu", "lieu")
                        .WithMany("credits")
                        .HasForeignKey("id_lieu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.Monnaie", "devise")
                        .WithMany("credits_monnaie")
                        .HasForeignKey("monnaie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.SituationCrédit", "situationcredit")
                        .WithMany("credits_situation")
                        .HasForeignKey("situation_credit")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.TypeCrédit", "typecredit")
                        .WithMany("credits_type_credit")
                        .HasForeignKey("type_credit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("activitecredit");

                    b.Navigation("classeretard");

                    b.Navigation("devise");

                    b.Navigation("dureeinitiale");

                    b.Navigation("dureerestante");

                    b.Navigation("excel");

                    b.Navigation("lieu");

                    b.Navigation("situationcredit");

                    b.Navigation("typecredit");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.FichierExcel", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Utilisateurs_audit.Utilisateur", "integrateurExcel")
                        .WithMany("fichiers_excel_integres")
                        .HasForeignKey("id_integrateur_excel")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("integrateurExcel");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.FichierXml", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Principaux.FichierExcel", "fichier_excel")
                        .WithMany("fichiers_xml")
                        .HasForeignKey("id_fichier_excel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.Utilisateurs_audit.Utilisateur", "generateurXml")
                        .WithMany("fichiers_xml_générés")
                        .HasForeignKey("id_utilisateur_generateur_xml")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("fichier_excel");

                    b.Navigation("generateurXml");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Garantie", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Principaux.Intervenant", "guarant")
                        .WithMany("garanties_intervenant")
                        .HasForeignKey("cle_interventant")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.TypeGarantie", "typeGarantie")
                        .WithMany("types_garantie")
                        .HasForeignKey("type_garantie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.Principaux.Crédit", "credit")
                        .WithMany("garanties")
                        .HasForeignKey("numero_contrat_credit", "date_declaration", "id_excel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("credit");

                    b.Navigation("guarant");

                    b.Navigation("typeGarantie");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.IntervenantCrédit", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Principaux.Intervenant", "intervenant")
                        .WithMany("intervenant_credits")
                        .HasForeignKey("cle_intervenant")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.NiveauResponsabilité", "niveau_resp")
                        .WithMany("intervenants_niveau_resp")
                        .HasForeignKey("niveau_responsabilite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.Principaux.Crédit", "credit")
                        .WithMany("intervenantsCredit")
                        .HasForeignKey("numero_contrat_credit", "date_declaration", "id_excel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("credit");

                    b.Navigation("intervenant");

                    b.Navigation("niveau_resp");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Lieu", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.Agence", "agence")
                        .WithMany("agences")
                        .HasForeignKey("code_agence")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.Pays", "pays")
                        .WithMany("pays")
                        .HasForeignKey("code_pays")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.Wilaya", "wilaya")
                        .WithMany("wilayas")
                        .HasForeignKey("code_wilaya")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("agence");

                    b.Navigation("pays");

                    b.Navigation("wilaya");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.donnees_brutes", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Principaux.FichierExcel", "import_excel")
                        .WithMany("donnees_brutes")
                        .HasForeignKey("id_import_excel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("import_excel");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.Agence", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Statiques.TablesDomaines.Wilaya", "wilaya")
                        .WithMany("agences")
                        .HasForeignKey("wilaya_code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("wilaya");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Utilisateurs_audit.Audit", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Utilisateurs_audit.Utilisateur", "utilisateur_acteur")
                        .WithMany("actions_de_cet_utilisateur")
                        .HasForeignKey("matricule_utilisateur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("utilisateur_acteur");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.ValidationFichiers.ErreurExcel", b =>
                {
                    b.HasOne("DCCR_SERVER.Models.Principaux.FichierExcel", "excel_associe")
                        .WithMany("erreurs")
                        .HasForeignKey("id_excel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DCCR_SERVER.Models.ValidationFichiers.RegleValidation", "regle_associe")
                        .WithMany("erreurs")
                        .HasForeignKey("id_regle")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("excel_associe");

                    b.Navigation("regle_associe");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveCrédit", b =>
                {
                    b.Navigation("garanties");

                    b.Navigation("intervenantsCredit");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Archives.ArchiveFichierExcel", b =>
                {
                    b.Navigation("credits");

                    b.Navigation("fichiers_xml");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Crédit", b =>
                {
                    b.Navigation("garanties");

                    b.Navigation("intervenantsCredit");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.FichierExcel", b =>
                {
                    b.Navigation("credits");

                    b.Navigation("donnees_brutes");

                    b.Navigation("erreurs");

                    b.Navigation("fichiers_xml");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Intervenant", b =>
                {
                    b.Navigation("garanties_intervenant");

                    b.Navigation("intervenant_credits");

                    b.Navigation("intervenant_credits_archives");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Principaux.Lieu", b =>
                {
                    b.Navigation("credits");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.ActivitéCrédit", b =>
                {
                    b.Navigation("credits_type_activite");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.Agence", b =>
                {
                    b.Navigation("agences");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.ClasseRetard", b =>
                {
                    b.Navigation("credits_classe_retard");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.DuréeCrédit", b =>
                {
                    b.Navigation("credits_duree_initiale");

                    b.Navigation("credits_duree_restante");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.Monnaie", b =>
                {
                    b.Navigation("credits_monnaie");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.NiveauResponsabilité", b =>
                {
                    b.Navigation("intervenants_niveau_resp");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.Pays", b =>
                {
                    b.Navigation("pays");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.SituationCrédit", b =>
                {
                    b.Navigation("credits_situation");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.TypeCrédit", b =>
                {
                    b.Navigation("credits_type_credit");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.TypeGarantie", b =>
                {
                    b.Navigation("types_garantie");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Statiques.TablesDomaines.Wilaya", b =>
                {
                    b.Navigation("agences");

                    b.Navigation("wilayas");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.Utilisateurs_audit.Utilisateur", b =>
                {
                    b.Navigation("actions_de_cet_utilisateur");

                    b.Navigation("fichiers_excel_integres");

                    b.Navigation("fichiers_xml_générés");
                });

            modelBuilder.Entity("DCCR_SERVER.Models.ValidationFichiers.RegleValidation", b =>
                {
                    b.Navigation("erreurs");
                });
#pragma warning restore 612, 618
        }
    }
}
